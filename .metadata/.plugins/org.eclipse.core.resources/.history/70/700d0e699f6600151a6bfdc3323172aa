package gramy;

import static java.lang.Math.pow;

import java.awt.Color;
import java.awt.Font;

import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JTextArea;

public class BadaniaOpisy extends JComponent{
	public static int KOSZTY_BOJOWA_METAL = 400 ;
	public static int COST_FIGHT_KRYSZTAL = 200 ;
	public static int COST_FIGHT_DEUTER = 500 ;
	
	public static int COST_PROTECTION_METAL = 500 ;
	public static int COST_PROTECTION_KRYSZTAL = 600 ;
	public static int COST_PROTECTION_DEUTER = 600 ;
	
	public static int COST_MINE_METAL = 500 ;
	public static int COST_MINE_KRYSZTAL = 500 ;
	public static int COST_MINE_DEUTER = 1000 ;
	
	JTextArea descriptionFight,descriptionProtection,descriptionMine ;
	public static JLabel  needs,needsFight , needsProtection, needsMine, fightCost,ochronnaKoszty,wydobywczaKoszty, metal , krysztal , deuter , bojowaLvl , wydobywczaLvl , ochronnaLvl , podmet , podkry , poddeu ;
	
	public BadaniaOpisy(){
		
		
		needs = new JLabel();
		needs.setBounds(812,140,150,40);
		needs.setForeground(Color.RED);
		needs.setText("WYMAGANIA:");
		add(needs);
		
		
		needsFight = new JLabel();
		needsFight.setBounds(805,170,150,40);
		needsFight.setForeground(Color.WHITE);
		needsFight.setText("Labolatorium 10 lvl");
		add(needsFight);
		
		needsProtection = new JLabel();
		needsProtection.setBounds(805,290,150,40);
		needsProtection.setForeground(Color.WHITE);
		needsProtection.setText("Labolatorium 15 lvl");
		add(needsProtection);
		
		needsMine = new JLabel();
		needsMine.setBounds(805,410,150,40);
		needsMine.setForeground(Color.WHITE);
		needsMine.setText("Labolatorium 5 lvl");
		add(needsMine);
		
		
		

		fightCost = new JLabel();
		fightCost.setBounds(400,195,400,70);
		fightCost.setForeground(Color.WHITE);
		fightCost.setText("Potrzebne surowce: Metal "+(int)(KOSZTY_BOJOWA_METAL*pow(1.5,Stage.LVL_BOJOWA-1))+" Krysztal "+(int)(COST_FIGHT_KRYSZTAL*pow(1.5,Stage.LVL_BOJOWA-1))+ " Deuter " +(int)(COST_FIGHT_DEUTER*pow(1.5,Stage.LVL_BOJOWA-1)));
		add(fightCost);
		
		
		ochronnaKoszty = new JLabel();
		ochronnaKoszty.setBounds(400,320,400,70);
		ochronnaKoszty.setForeground(Color.WHITE);
		ochronnaKoszty.setText("Potrzebne surowce: Metal "+(int)(COST_PROTECTION_METAL*pow(1.5,Stage.LVL_OCHRONNA-1))+" Krysztal "+(int)(COST_PROTECTION_KRYSZTAL*pow(1.5,Stage.LVL_OCHRONNA-1))+" Deuter "+ (int)(COST_PROTECTION_DEUTER*pow(1.5,Stage.LVL_OCHRONNA-1)));
		add(ochronnaKoszty);
		
		wydobywczaKoszty = new JLabel();
		wydobywczaKoszty.setBounds(400,470,400,70);
		wydobywczaKoszty.setForeground(Color.WHITE);
		wydobywczaKoszty.setText("Potrzebne surowce: Metal "+(int)(COST_MINE_METAL*pow(1.5,Stage.LVL_WYDOBYWCZA-1))+" Krysztal "+(int)(COST_MINE_KRYSZTAL*pow(1.5,Stage.LVL_WYDOBYWCZA-1))+" Deuter "+(int)(COST_MINE_DEUTER*pow(1.5,Stage.LVL_WYDOBYWCZA-1)));
		add(wydobywczaKoszty);
		
		
		
		
		
		
		
		
		
		metal = new JLabel(""+Stage.METAL);
		metal.setForeground(Color.WHITE);
		metal.setBounds(400, 40, 200, 20);
		add(metal);
		
		krysztal = new JLabel(""+Stage.KRYSZTAL);
		krysztal.setForeground(Color.WHITE);
		krysztal.setBounds(605, 40, 200, 20);
		add(krysztal);
		
		deuter = new JLabel(""+Stage.DEUTER);
		deuter.setForeground(Color.WHITE);
		deuter.setBounds(805, 40, 200, 20);
		add(deuter);
		
		
		bojowaLvl = new JLabel("Technologia bojowa " + Stage.LVL_BOJOWA +" lvl");
		ochronnaLvl = new JLabel("Technologia ochronna "+Stage.LVL_OCHRONNA +" lvl");
		wydobywczaLvl = new JLabel("Technologia wydobywcza "+Stage.LVL_WYDOBYWCZA +" lvl");
		bojowaLvl.setForeground(Color.WHITE);
		ochronnaLvl.setForeground(Color.WHITE);
		wydobywczaLvl.setForeground(Color.WHITE);
		bojowaLvl.setBounds(400,130,150,30);
		ochronnaLvl.setBounds(400,250,200,30);
		wydobywczaLvl.setBounds(400,370,250,30);
		add(bojowaLvl);
		add(ochronnaLvl);
		add(wydobywczaLvl);
		
		
		podmet = new JLabel("Metal");
		podkry = new JLabel("Krysztal");
		poddeu = new JLabel("Deuter");
	//podmet.setOpaque(true);
	//podmet.setBackground(Color.BLUE);
		podmet.setForeground(Color.WHITE);
		podkry.setForeground(Color.WHITE);
		poddeu.setForeground(Color.WHITE);
		podmet.setBounds(353,15,150,30);
		podkry.setBounds(548,15,150,30);
		poddeu.setBounds(750,15,150,30);
		add(podmet);
		add(podkry);
		add(poddeu);
		
		descriptionFight = new JTextArea();
		Font dialog = new Font("Serif" , Font.ITALIC,13);
		descriptionFight.setForeground(Color.RED);
		descriptionFight.setFont(dialog);
		descriptionFight.setText("Technologia bojowa usprawnia systemy bojowe.\nKa¿dy poziom technologii bojowej podwy¿sza moc\nbojow¹ jednostek o 10% wartoœci pocz¹tkowej.");
		descriptionFight.setBackground(Color.GRAY);
		descriptionFight.setEditable(false);
		descriptionFight.setOpaque(false);
		descriptionFight.setBounds(400, 150, 295, 95);
		add(descriptionFight);
		//////////////////////////////////////////
		
		descriptionProtection = new JTextArea();
		descriptionProtection.setForeground(Color.RED);
		descriptionProtection.setFont(dialog);
		descriptionProtection.setText("Technologia ochronna usprawnia pow³oki ochronne\nwokó³ statków i systemów obronnych. Ka¿dy poziom\ntechnologii ochronnej podwy¿sza efektywnoœæ pow³ok\no 10% wartoœci podstawowej.");
		//textkrys.setBackground(Color.GRAY);
		descriptionProtection.setEditable(false);
		descriptionProtection.setOpaque(false);
		descriptionProtection.setBounds(400, 270, 295, 95);
		add(descriptionProtection);
		/////////////////////////////////////////
		
		descriptionMine = new JTextArea();
		descriptionMine.setForeground(Color.RED);
		descriptionMine.setFont(dialog);
		descriptionMine.setText("Technologia wydobywcza zosta³a opracowana przez\nspecjalistyczny zespó³ naukowców. Dziêki\nzastosowaniu po³¹czenia komputerów i energii\nmo¿liwe jest pozyskiwanie zló¿ metalu i kryszta³u\nw mniejszym czasie ni¿ dotychczas. Ka¿dy poziom tej\ntechnologii zwiêksza wydobycie surowców 5%.");
		//textdeu.setBackground(Color.GRAY);
		descriptionMine.setEditable(false);
		descriptionMine.setOpaque(false);
		descriptionMine.setBounds(400, 390, 295, 130);
		add(descriptionMine);
		
		setBounds(0,0,Stage.SZEROKOSC,Stage.HEIGHT);
		setVisible(true);
		
	}

}
